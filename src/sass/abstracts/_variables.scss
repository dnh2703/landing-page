@use "./breakpoint" as *;

$base-spacing: 0.25rem;
$total-steps: 144;

$properties: (
  gap: (
    gap
  ),
  px: (
    padding-left,
    padding-right
  ),
  py: (
    padding-top,
    padding-bottom
  ),
  pt: (
    padding-top
  ),
  pb: (
    padding-bottom
  ),
  pl: (
    padding-left
  ),
  p: (
    padding
  ),
  mx: (
    margin-left,
    margin-right
  ),
  my: (
    margin-top,
    margin-bottom
  ),
  mr: (
    margin-right
  ),
  ml: (
    margin-left
  ),
  mt: (
    margin-top
  ),
  mb: (
    margin-bottom
  ),
  m: (
    margin
  ),
  w: (
    width
  ),
  h: (
    height
  ),
  max-w: (
    max-width
  ),
  top: (
    top
  ),
  bottom: (
    bottom
  ),
  left: (
    left
  ),
  right: (
    right
  )
);

@mixin generate-spacing-classes($property, $values) {
  @for $i from 0 through $total-steps {
    $value: $i * $base-spacing;
    .#{$property}-#{$i} {
      @each $val in $values {
        #{$val}: #{$value};
      }
    }
    @each $breakpoint, $breakpoint-value in $breakpoints {
      @media (min-width: #{$breakpoint-value}) {
        .#{$breakpoint}\:#{$property}-#{$i} {
          @each $val in $values {
            #{$val}: #{$value};
          }
        }
      }
    }
  }
}

// Loop through properties and generate classes
@each $property, $values in $properties {
  @include generate-spacing-classes(#{$property}, $values);
}

// Cursor
.cursor-pointer {
  cursor: pointer;
}

// width
.w-full {
  width: 100%;
}

.h-full {
  height: 100%;
}

// Background

.bg-cover {
  background-size: cover;
}

.bg-contain {
  background-size: contain;
}

.bg-center {
  background-position: center center;
}

.bg-left {
  background-position: left center;
}

.bg-right {
  background-position: right center;
}

.bg-top {
  background-position: center top;
}

.bg-bottom {
  background-position: center bottom;
}

.bg-no-repeat {
  background-repeat: no-repeat;
}

.hidden {
  display: none;
}

.overflow-hidden {
  overflow: hidden;
}

.-left-1 {
  left: -0.25rem /* -4px */;
}

@each $breakpoint, $value in $breakpoints {
  @media (min-width: #{$value}) {
    .#{$breakpoint}\:hidden {
      display: none !important;
    }
  }
}

// transition
.transition-transform {
  transition: transform 0.3s ease;
}

.translate-x-full {
  transform: translateX(100%);
}

.translate-x-0 {
  transform: translateX(0);
}

.ratio {
  aspect-ratio: 1/1;
}
